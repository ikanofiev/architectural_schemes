@startuml
namespace CORE {

namespace core_accounts {
entity core_accounts #LightGray  {
Корневые счета. Справочник.
==
* id : uuid
==
* account_number : string
* bic : varchar
* inn : varchar(12)
* is_actual : boolean
* receiver : varchar
  swift : varchar(11)
  bank_swift : varchar(11)
* kpp : varchar(9)
* create_timestamp : date_time
* update_timestamp : date_time
}

entity turnovers_core_accounts {
Обороты по корневым счетам
==
* document_type : enum
* id : uuid
==
* core_accounts_id : uuid
* payment_document_id : uuid
  income_amount : number
  expense_amount : number
* currency :
* value_date : dateTime
* create_timestamp : date_time


}

entity balance_core_accounts {
Балансы корневых счетов
==
** id : uuid
==
* core_accounts_id : uuid
* turnovers_core_accounts_id : uuid
* amount :
* currency :
* value_date : date
* create_timestamp : date_time
* update_timestamp : date_time
}
}

namespace PSBR {
entity incoming_payment_document_psbr {
Входящий платежный документ ПСБР
==
* id : uuid
* payment_document_id : uuid
==
* create_timestamp : date_time
* update_timestamp : date_time
* number : number (9)
* date : date
* value_date : date
* external_id : string
* purpose : string
* amount : number
* currency : enum
* status : enum
==
Блок отправителя
==
* sender_info : string
* sender_account : string
* sender_bic : string
* sender_inn : string
==
Блок получателя
==
* receiver_info : string
* receiver_account : string
* receiver_bic : string
* receiver_inn : string


}

entity outgoing_payment_document_psbr {
Исходящий платежный документ
==
* id : uuid
==
* create_timestamp : date_time
* update_timestamp : date_time
* number : number (9)
* date : date
* value_date : date
* external_id : string
* purpose : string
* amount : number
* currency : enum
* status : enum
==
Блок отправителя
==
* sender_info : string
* sender_account : string
* sender_bic : string
* sender_inn : string
==
Блок получателя
==
* receiver_info : string
* receiver_account : string
* receiver_bic : string
* receiver_inn : string
}

entity incoming_payment_document_psbr_history {
История статуса входящего платежного документа ПСБР
==
* id : uuid
==
* payment_document_id : uuid
* status : enum
* create_timestamp : date_time
}

entity outgoing_payment_document_psbr_history {
История статуса исходящего платежного документа ПСБР
==
* id : uuid
==
* payment_document_id : uuid
* status : enum
* create_timestamp : date_time
}
}

namespace SBP {
entity incoming_payment_document_sbp {
Входящий платежный документ СБП
==
* id : uuid
* payment_document_id : uuid
==

==
Блок платежа
==
Блок отправителя
==
Блок получателя
}

entity callback_sbp {
}


entity incoming_payment_document_sbp_history {
История входящего платежного документа СБП
==
* id : uuid
==
* payment_document_id : uuid
* status : enum
* create_timestamp : date_time
}
}
namespace Incoming_payment_documents {

entity incoming_payment_document {
Входящий платежный документ ПСБР
==
* id : uuid
==
* create_timestamp : date_time
* update_timestamp : date_time
* number : number (9)
* date : date
* value_date : date
* external_id : string
* purpose : string
* amount : number
* currency : enum
* status : enum
==
Блок отправителя
==
* sender_info : string
* sender_account : string
* sender_bic : string
* sender_inn : string
==
Блок получателя
==
* receiver_info : string
* receiver_account : string
* receiver_bic : string
* receiver_inn : string


}
entity incoming_payment_document_history {
История входящего платежного документа СБП
==
* id : uuid
==
* payment_document_id : uuid
* status : enum
* create_timestamp : date_time
}
}
}

entity refund_undefined_funds {
Возвраты не выясненных средств
==
* id : uuid
* incoming_payment_document_psbr_id : uuid
* outgoing_payment_document_psbr_id : uuid
}

entity statement_domain{
Домен сверки с НРД
==
statements_entries : Запись в сверке

}

entity registry_domain{
Домен реестровых зачислений
==
registry_document : Реестр.Документ
registry_document_records : Таблица зачислений по реестру
registry_refund : Реестр.возврат излишков

}

entity clients_domain{
Домен клиентских средств
==
client_account_transactions : Обороты по кошелькам клиентов

}

entity invoices_domain{
Домен счетов на оплату (целевое распоряжение средств.)
==
invoice_transactions : Обороты по счету

}

'Внутренние взаимодействия корневого домена
core_accounts::id ||--o{ turnovers_core_accounts::core_accounts_id #blue
core_accounts::id ||--o{ balance_core_accounts::core_accounts_id #blue
incoming_payment_document_psbr::id ||--o{ incoming_payment_document_psbr_history::payment_document_id #Teal
incoming_payment_document::id ||--o{ incoming_payment_document_history::payment_document_id #Teal
outgoing_payment_document_psbr::id ||--o{ outgoing_payment_document_psbr_history::payment_document_id #Teal
incoming_payment_document_sbp::id ||--o{ incoming_payment_document_sbp_history::payment_document_id #Teal
incoming_payment_document_psbr::id ||--|| turnovers_core_accounts::payment_document_id #green
outgoing_payment_document_psbr::id ||--|| turnovers_core_accounts::payment_document_id

'Возврат невыясненных средств
incoming_payment_document_psbr::id ||-up-|| refund_undefined_funds::incoming_payment_document_psbr_id #red
outgoing_payment_document_psbr::id ||--|| refund_undefined_funds::outgoing_payment_document_psbr_id #green

'Связь платежа и реестра
incoming_payment_document_psbr::id ||-r-|| registry_domain::registry_document #red

'Возврат излишков по реестру
outgoing_payment_document_psbr::id ||--|| registry_domain::registry_refund #green

'Связь выписки и учета ПД в корневом домене
statement_domain::statements_entries ||--|| incoming_payment_document_psbr::external_id
statement_domain::statements_entries ||--|| outgoing_payment_document_psbr::external_id

'Учет входящего платежа на кошельке
incoming_payment_document_psbr::id ||--|| clients_domain::client_account_transactions #green

'Учет входящего платежа под счет на оплату
incoming_payment_document_psbr::id ||--|| invoices_domain::invoice_transactions #green

'Оплата счета (исходящее ПП)
outgoing_payment_document_psbr::id ||-l-|| invoices_domain::invoice_transactions #green

@enduml
